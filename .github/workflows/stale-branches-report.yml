name: Stale Branches Report

on:
  schedule:
    - cron: "0 8 * * 1"
  workflow_dispatch:

permissions:
  contents: read
  issues: read

jobs:
  stale-branches-report:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.STALE_REPO_PAT }}
      STALE_DAYS: 90  # Change as needed

    steps:
      - name: Checkout (empty, just for context)
        uses: actions/checkout@v4

      - name: Install jq and GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y jq gh

      - name: Generate Stale Branches Report (shell)
        env:
          GH_TOKEN: ${{ secrets.STALE_REPO_PAT }}
          STALE_DAYS: ${{ env.STALE_DAYS }}
        run: |
          set -e
          set -u

          TMP_REPORT="stale-branches-report.md"
          echo "# Stale Branches Report (not updated in ${STALE_DAYS}+ days)" > "$TMP_REPORT"
          echo "" >> "$TMP_REPORT"

          NOW_SECS=$(date -u +%s)
          CUTOFF_SECS=$(($NOW_SECS - 86400 * ${STALE_DAYS}))

          USER=$(gh api user --jq .login)

          gh repo list "$USER" --json name --limit 500 | jq -r '.[].name' | while read REPO; do
            echo "*** found repo: ${REPO}"
          done
          
          gh repo list "$USER" --json name --limit 500 | jq -r '.[].name' | while read REPO; do
            echo "*** checking repo: ${REPO}"
            
            STALE_FOUND=0
            BRANCHES=$(gh api "/repos/$USER/$REPO/branches?per_page=100")
            BRANCHES_COUNT=$(echo "$BRANCHES" | jq length)
            BRANCH_LINES=""
            for i in $(seq 0 $(($BRANCHES_COUNT - 1))); do
              BRANCH_NAME=$(echo "$BRANCHES" | jq -r ".[$i].name")
              #              if [ "$BRANCH_NAME" = "main" ] || [ "$BRANCH_NAME" = "master" ]; then
              #                continue
              #              fi
              COMMIT_DATE=$(echo "$BRANCHES" | jq -r ".[$i].commit.commit.committer.date")
              if [ "$COMMIT_DATE" = "null" ] || [ -z "$COMMIT_DATE" ]; then
                echo "Skipping branch $BRANCH_NAME due to missing commit date."
                continue
              fi
              COMMIT_SECS=$(date -u -d "$COMMIT_DATE" +%s)
              if [ $COMMIT_SECS -lt $CUTOFF_SECS ]; then
                BRANCH_LINES="$BRANCH_LINES- \`$BRANCH_NAME\` (Last update: $COMMIT_DATE)\n"
                STALE_FOUND=1
              fi
            done
            if [ $STALE_FOUND -eq 1 ]; then
              echo "## $REPO" >> "$TMP_REPORT"
              echo -e "$BRANCH_LINES" >> "$TMP_REPORT"
              echo "" >> "$TMP_REPORT"
            fi
          done

      - name: Upload stale branch report
        uses: actions/upload-artifact@v4
        with:
          name: stale-branches-report
          path: stale-branches-report.md

      
      - name: Check for the stale report issue
        run: |
          ISSUE_NUMBER=$(gh search issues "stale-branches-report" --match title --json number --jq ".[0].number")
          echo "issue_number=$ISSUE_NUMBER" 
          echo "issue_number=$ISSUE_NUMBER" >> "$GITHUB_ENV"
        env:
          GH_TOKEN: ${{ secrets.STALE_REPO_PAT }}
          
      - name: Create issue
        uses: peter-evans/create-issue-from-file@v5
        with:
          issue-number: ${{ env.issue_number }}
          title: stale-branch-report
          content-filepath: stale-branches-report.md
          assignees: michaeldallen
          token: ${{ secrets.STALE_REPO_PAT }}
