name: Stale Branches Report

on:
  schedule:
    - cron: "0 8 * * 1"  # Every Monday at 08:00 UTC
  workflow_dispatch:

permissions:
  contents: read
  issues: read
  
jobs:
  stale-branches-report:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      STALE_DAYS: 90  # Change as needed

    steps:
      - name: Checkout (empty, just for context)
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Generate Stale Branches Report
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "
          #!/usr/bin/env python3
          import os, sys, subprocess, json
          from datetime import datetime, timedelta
      
          token = os.environ['GH_TOKEN']
          stale_days = int(os.environ.get('STALE_DAYS', 90))
          cutoff = datetime.utcnow() - timedelta(days=stale_days)
          user = subprocess.check_output(
              ['gh', 'api', 'user', '--jq', '.login'],
              env={**os.environ, 'GH_TOKEN': token}
          ).decode().strip()
          repos = json.loads(subprocess.check_output(
              ['gh', 'repo', 'list', user, '--json', 'name,sshUrl', '--limit', '500'],
              env={**os.environ, 'GH_TOKEN': token}
          ).decode())
      
          report_lines = [f'# Stale Branches Report (not updated in {stale_days}+ days)\\n']
          for repo in repos:
              name = repo['name']
              branches = json.loads(subprocess.check_output(
                  ['gh', 'api', f'/repos/{user}/{name}/branches', '--paginate'],
                  env={**os.environ, 'GH_TOKEN': token}
              ).decode())
              stale = []
              for branch in branches:
                  branch_name = branch['name']
                  commit_url = branch['commit']['url']
                  commit = json.loads(subprocess.check_output(
                      ['gh', 'api', commit_url],
                      env={**os.environ, 'GH_TOKEN': token}
                  ).decode())
                  date = commit['commit']['committer']['date']
                  dt = datetime.strptime(date, '%Y-%m-%dT%H:%M:%SZ')
                  if dt < cutoff and branch_name != 'main' and branch_name != 'master':
                      stale.append((branch_name, date))
              if stale:
                  report_lines.append(f'## {name}')
                  for b, d in stale:
                      report_lines.append(f'- {b} (Last update: {d})')
                  report_lines.append('')
          with open('stale-branches-report.md', 'w') as f:
              f.write('\\n'.join(report_lines))
          " > stale_report_script.py
          python3 stale_report_script.py

      - name: Upload stale branch report
        uses: actions/upload-artifact@v4
        with:
          name: stale-branches-report
          path: stale-branches-report.md
